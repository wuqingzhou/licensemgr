<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <!-- 指定自定义的通用mapper -->
           <property name="mappers" value="com.teligen.licensemgr.base.dao.MyMapper"/>
            <property name="caseSensitive" value="true"/>
        </plugin>

        <!-- 数据库连接配置 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/test"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!-- 其中targetPackage表示生成的文件所在的包，即：文件第一行中的包路径 -->
        <!-- 其中targetProject表示在哪个路径下生成targetPackage包。注意：最终文件的全路径是targetProject + targetPackage -->
        <!-- 注意：targetProject路径一定要实现建立好。假设targetProject="src/test/java。那么就一定要有"src/test/java"这个文件夹 -->
        <!--
            例如。如果targetPackage="com.teligen.licensemgr.entity" targetProject="src/test/java"
            那么生成的实体文件（假设名为User.java）的路径就为：src/test/java/com/teligen/licensemgr/entity/User.java
        -->
        <javaModelGenerator targetPackage="com.teligen.licensemgr.entity" targetProject="src/test/java"/>

        <sqlMapGenerator targetPackage="com.teligen.licensemgr.mapper"  targetProject="src/test/java"/>

        <javaClientGenerator targetPackage="com.teligen.licensemgr.dao" targetProject="src/test/java" type="XMLMAPPER" />

        <!-- tableName="%"的话会对所有表进行操作，tableName="tb_license"的话只会对tb_license表进行操作 -->
        <table tableName="%" >
            <!-- mysql 配置 -->
            <!-- 如果使用了通用mapper来生成代码，则表中必须要有id这个自增长的int字段，这个配置不能少 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <!-- oracle 配置-->
            <!--<generatedKey column="id" sqlStatement="select SEQ_{1}.nextval from dual" identity="false" type="pre"/>-->
        </table>
    </context>
</generatorConfiguration>